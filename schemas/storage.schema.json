{
	"__url": "https://raw.githubusercontent.com/Sapiens-OSS/hammerstone-framework/feature/data-driven-api/schemas/storage.schema.json",
	"$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "hammerstone.storage.schema",
    "title": "Storage Definition File, which defines how resources are stored and carried.",
    "description": "A file which describes how objects are stored/carried",
    "type": "object",
    "required": [
        "hammerstone:storage_definition"
    ],
	"properties": {
		"hammerstone:storage_definition": {
			"description": "A wrapper object to make storage files easier to identify.",
			"properties": {
				"description": {
					"type": "object",
					"description": "A field which describes generic or shared properties for this storage area.",
					"required": [
						"identifier",
						"name"
					],
					"properties": {
						"identifier": {
							"type": "string",
							"description": "The name of the storage zone",
							"examples": [
								"sirlich:skull_storage",
								"skull"
							]
						},
						"name": {
							"type": "string",
							"description": "The name of the storage zone.",
							"examples": [
								"Potato Storage",
								"Potatoes"
							]
						}
					}
				},
				"components": {
					"type": "object",
					"description": "A list of components controlling this storage zone.",
					"required": [
						"hs_storage",
						"hs_carry"
					],
					"properties": {
						"hs_storage": {
							"type": "object",
							"description": "Describes how the object is stored.",
							"required": [
								"display_object"
							],
							"properties": {
								"props": {
									"type": "object",
									"additionalItems": true,
									"description": "A table, which will be inserted/merged into the newly created storage. Match the keys you find in storage.lua. Use lua configs if you need more control."
								},
								"resources": {
									"type": "array",
									"description": "The resources which will be stored in this storage area by default.",
									"items": {
										"type": "string",
										"description": "A single resource id.",
										"examples": [
											"skull"
										]
									}
								},
								"display_object": {
									"type": "string",
									"description": "The game object which will represent this storage.",
									"examples": [
										"skull"
									]
								},
								"item_size": {
									"type": "array",
									"default": [
										0.5, 0.5, 0.5
									],
									"description": "The 'XYZ' size of the resource, when stored. Small objects like apples tend to be around '0.15' in size.",
									"minimum": 3,
									"maximum": 3,
									"items": {
										"type": "number"
									}
								},
								"offset": {
									"type": "array",
									"description": "The offset of the object, within the storage area.",
									"minimum": 3,
									"maximum": 3,
									"default": [
										0.0, 0.0, 0.0
									],
									"items": {
										"type": "number"
									}
								},
								"rotation": {
									"type": "array",
									"description": "The default rotation, before randomization is applied.",
									"minimum": 3,
									"maximum": 3,
									"default": [
										0.0, 0.0, 0.0
									],
									"items": {
										"type": "number"
									}
								},
								"random_rotation_weight": {
									"type": "number",
									"description": "The weight that the random rotation will have on the object",
									"default": "2"
								}
							}
						},
						"hs_carry": {
							"type": "object",
							"description": "Describes how the object is carried.",
							"properties": {
								"hs_carry_count": {
									"type": "object",
									"description": "A 'component' which wraps a few carry-count related properties.",
									"properties": {
										"normal": {
											"type": "integer",
											"description": "The number of items which can normally be held.",
											"default": 1
										},
										"limited_ability": {
											"type": "integer",
											"description": "The number of items which can be carried when in limited ability. e.g, a child, pregnant, or old.",
											"default": 1
										},
										"running": {
											"type": "integer",
											"description": "The number of items which can be held when running.",
											"default": 1
										}
									}
								},
								"carry_type": {
									"description": "The 'carry type' animation the sapien will play, when carrying this object.",
									"type": "string",
									"default": "standard",
									"enum": [
										"standard",
										"small",
										"high",
										"highSmall",
										"highMedium"
									]
								},
								"stack_type": {
									"description": "The stacking behavior of the objects when being carried.",
									"type": "string",
									"default": "standard",
									"enum": [
										"standard",
										"vertical"
									]
								},
								"offset": {
									"type": "array",
									"description": "NODOCS",
									"minimum": 3,
									"maximum": 3,
									"default": [
										0.0, 0.0, 0.0
									],
									"items": {
										"type": "number",
										"description": "NODOCS"
									}
								},
								"rotation_constant": {
									"type": "number",
									"description": "NODOCS"
								},
								"rotation": {
									"type": "array",
									"description": "NODOCS",
									"minimum": 3,
									"maximum": 3,
									"default": [
										0.0, 0.0, 0.0
									],
									"items": {
										"type": "number",
										"description": "NODOCS"
									}
								}
							}
						}
					}
				}
			}
		}
	}
}